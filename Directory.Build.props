<Project>
    <!--
    Description:
        This property file is imported by the projects in this repository to set global locations
        common to all of the projects for a consistent build.
    -->
    <!--
    Allow for a parent to provide/override the defaults provided here
    Projects importing this property sheet can still override those settings.

    Implementation Note:
        ALL properties defined here should be done conditionally to allow inheriting from
        a parent. Conditional properties makes this project a well behaved sub module for
        other projects that might want to set the build outputs etc... into a different place.
    -->

    <!--
    Use Choose to set the dependencies of the EnsureBuildNumbers target to the correct dependency.
    The EnsureBuildNumbers target does nothing and instead the work is done in one of the two
    targets selected here. The actual target used depends on whether FullBuildNumber is already set
    or not. In an automated build the build server will set the FullBuildNumber (Usually as a global
    property to the msbuild command line that started this project)
    -->
    <Choose>
        <When Condition="'$(FullBuildNumber)'==''">
            <PropertyGroup>
                <EnsureBuildNumbersDependsOn>CreateBuildNumbers</EnsureBuildNumbersDependsOn>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <EnsureBuildNumbersDependsOn>_ParseFullBuildNumber</EnsureBuildNumbersDependsOn>
            </PropertyGroup>
        </Otherwise>
    </Choose>
    <PropertyGroup Condition="'$(MSBuildProjectExtension)'=='.csproj'">
        <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)Llvm.NET.ruleset</CodeAnalysisRuleSet>
    </PropertyGroup>
    <PropertyGroup>
        <!--
        Native code and interop are very specific to a given LLVM version so this is hard coded at the branch level.
        All references in projects and other common imports should use the derived $(LlvmVersion) property to allow updating
        the version from a single central place.
        -->
        <LlvmVersionMajor>4</LlvmVersionMajor>
        <LlvmVersionMinor>0</LlvmVersionMinor>
        <LlvmVersionPatch>1</LlvmVersionPatch>

        <LlvmVersion>$(LlvmVersionMajor).$(LlvmVersionMinor).$(LlvmVersionPatch)</LlvmVersion>
        <!-- Default to x86/Win32 | Debug build if not otherwise specified -->
        <Platform Condition="'$(Platform)'=='' AND '$(MSBuildProjectExtension)'!='.vcxproj'">x86</Platform>
        <Platform Condition="'$(Platform)'=='' AND '$(MSBuildProjectExtension)'=='.vcxproj'">Win32</Platform>
        <UnifiedPlatformPathName Condition="'$(UnifiedPlatformPathName)'==''">$(Platform)</UnifiedPlatformPathName>
        <UnifiedPlatformPathName Condition="'$(UnifiedPlatformPathName)'=='Win32'">x86</UnifiedPlatformPathName>

        <Configuration Condition="'$(Configuration)'==''">Debug</Configuration>

        <!-- Use the location of this file (at the top of the build tree) to define the root directory, if not already set -->
        <BuildRootDir Condition="'$(BuildRootDir)'==''">$(MSBuildThisFileDirectory)</BuildRootDir>
        <BuildRootDir>$([MSBuild]::EnsureTrailingSlash("$(BuildRootDir)"))</BuildRootDir>

        <!-- Put build output and intermediate output files into a well known location outside of the source tree -->
        <BaseBuildOutputPath Condition="'$(BaseBuildOutputPath)'==''">$([MSBuild]::NormalizeDirectory("$(BuildRootDir)", "BuildOutput"))</BaseBuildOutputPath>
        <BaseBuildOutputPath>$([MSBuild]::EnsureTrailingSlash("$(BaseBuildOutputPath)"))</BaseBuildOutputPath>

        <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)'==''" >$([MSBuild]::NormalizeDirectory("$(BaseBuildOutputPath)", "Intermediate", "$(MSBuildProjectName)"))</BaseIntermediateOutputPath>
        <IntDir Condition="'$(IntDir)'==''">$([MSBuild]::NormalizeDirectory("$(BaseIntermediateOutputPath)", "$(UnifiedPlatformPathName)", "$(Configuration)"))</IntDir>

        <BaseOutputPath Condition="'$(BaseOutputPath)'==''">$([MSBuild]::NormalizeDirectory("$(BaseBuildOutputPath)","Unsigned"))</BaseOutputPath>
        <OutputPath Condition="'$(OutputPath)'==''">$([MSBuild]::NormalizeDirectory("$(BaseOutputPath)", "$(UnifiedPlatformPathName)","$(Configuration)"))</OutputPath>
        <OutputPath>$([MSBuild]::EnsureTrailingSlash("$(OutputPath)"))</OutputPath>

        <OutDir Condition="'$(OutDir)'==''">$(OutputPath)</OutDir>

        <BaseSignedOutputPath Condition="'$(SignedOutputPath)'==''">$([MSBuild]::NormalizeDirectory("$(BaseBuildOutputPath)","Signed"))</BaseSignedOutputPath>
        <SignedOutputPath Condition="'$(SignedOutputPath)'==''">$([MSBuild]::NormalizeDirectory("$(BaseSignedOutputPath)","$(UnifiedPlatformPathName)", "$(Configuration)"))</SignedOutputPath>
        <SignedOutputPath>$([MSBuild]::EnsureTrailingSlash("$(SignedOutputPath)"))</SignedOutputPath>

        <!-- Fix Major and minor build numbers to match LLVM so it's easier to relate to the LLVM version -->
        <BuildMajor Condition="'$(BuildMajor)'=='' AND '$(FullBuildNumber)'==''">$(LlvmVersionMajor)</BuildMajor>
        <BuildMinor Condition="'$(BuildMinor)'=='' AND '$(FullBuildNumber)'==''">$(LlvmVersionMinor)</BuildMinor>
    </PropertyGroup>
</Project>
